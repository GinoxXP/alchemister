using Ginox.BlackCauldron.Core.Editor;
using System;
using UnityEditor;
using UnityEngine;

namespace Ginox.BlackCauldron.Alchemy.Editor
{
    public class CreateIngredientWindow : EditorWindow
    {
        private static readonly string ALCHEMY_PATH = Environment.CurrentDirectory + "\\" + "Assets\\Black Cauldron\\Alchemy\\Scripts\\";
        private static readonly string INGREDIENTS_PATH = "Ingredients\\";
        private static readonly string MODELS_PATH = ALCHEMY_PATH + "Models\\" + INGREDIENTS_PATH;
        private static readonly string VIEWS_PATH = ALCHEMY_PATH + "Views\\" + INGREDIENTS_PATH;
        private static readonly string CONTROLLERS_PATH = ALCHEMY_PATH + "Controllers\\" + INGREDIENTS_PATH;

        private string ingredientName;

        [MenuItem("Code Generation/Create ingredient")]
        static void ShowWindow()
        {
            GetWindow<CreateIngredientWindow>("Create ingredient");
        }

        private void OnGUI()
        {
            ingredientName = GUILayout.TextField(ingredientName);
            if (GUILayout.Button("Create"))
                Generate(ingredientName);
        }

        public void Generate(string ingredientName)
        {
            var ingredient = ParseName.Parse(ingredientName);

            var modelClassName = ingredient;
            var viewClassName = $"{ingredient}View";
            var controllerClassName = $"{ingredient}Controller";

            var model =
$@"//<auto-generated/>
namespace Ginox.BlackCauldron.Alchemy.Models.Ingredients
{{
    public class {modelClassName} : AIngredient
    {{
        public override string NameKey => nameof({ingredient});
    }}
}}
";

            var view =
$@"//<auto-generated/>
using Ginox.BlackCauldron.Alchemy.Controllers.Ingredients;
using Zenject;

namespace Ginox.BlackCauldron.Alchemy.Views.Ingredients
{{
    public class {viewClassName} : AIngredientView
    {{
        [Inject]
        private void Init({controllerClassName} controller)
        {{
            base.Init(controller);
        }}
    }}
}}
";

            var controller =
$@"//<auto-generated/>
using Ginox.BlackCauldron.Alchemy.Models.Ingredients;

namespace Ginox.BlackCauldron.Alchemy.Controllers.Ingredients
{{
    public class {controllerClassName} : AIngredientController
    {{
        public {controllerClassName}({modelClassName} model) : base(model)
        {{
        }}
    }}
}}
";

            ClassFile.SaveClassFile(modelClassName, MODELS_PATH, model);
            ClassFile.SaveClassFile(viewClassName, VIEWS_PATH, view);
            ClassFile.SaveClassFile(controllerClassName, CONTROLLERS_PATH, controller);

            Debug.Log($"{ingredient} was created");
        }
    }
}
